-optimizationpasses 5
-overloadaggressively
-allowaccessmodification
-keepattributes *Annotation*,Signature
-keep class com.google.inject.Binder
-keep class com.google.inject.** { *; } 
-keep public class com.google.inject.internal.asm.util.$*
-keep class com.google.inject.internal.cglib.core.$*
-keep class com.google.inject.internal.util.$*
-keep class javax.inject.** { *; } 
-keep class javax.annotation.** { *; } 
-keep public class com.google.inject.Inject
-keep public class org.gielinor.client.launcher.Launcher{public static void main(java.lang.String[]);}

##---------------Begin: proguard configuration for Gson ----------
# Gson uses generic type information stored in a class file when working with
#fields. Proguard removes such information by default, so configure it to keep
#all of it.
-keepattributes Signature

# For using GSON @Expose annotation
-keepattributes *Annotation*

# Gson specific classes
-keep class sun.misc.Unsafe { *; }
#-keep class com.google.gson.stream.** { *; }

# Application classes that will be serialized/deserialized over Gson
-keep class com.google.gson.examples.android.model.** { *; }

-keep class org.gielinor.client.launcher.feed.FeedReader**
-keepclassmembers class org.gielinor.client.launcher.feed.FeedReader** { *; }
-keep class org.gielinor.client.launcher.feed.ServerUpdates**
-keepclassmembers class org.gielinor.client.launcher.feed.ServerUpdates** { *; }

##---------------End: proguard configuration for Gson ----------

#-keep public class org.gielinor.client.launcher.feed.ServerUpdates{ *; }
#-keep public class org.gielinor.client.launcher.feed.**
 # keeps all fields and Constructors with @Inject
-keepclassmembers,allowobfuscation class * {
    @com.google.inject.Inject <fields>;
    @com.google.inject.Inject <init>(...);
}